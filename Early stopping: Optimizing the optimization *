#early stopping to stop optimization when it isn't helping any more.
#Since the optimization stops automatically when it isn't helping, you can also set a high value for epochs in your call to .fit()
#epoch default is 10. with early stopping, you can set patience which is # of epochs you want to evaluate before calling early stopping

# Import EarlyStopping
from keras.callbacks import EarlyStopping

# Save the number of columns in predictors: n_cols
n_cols = predictors.shape[1]
input_shape = (n_cols,)

# Specify the model
model = Sequential()
model.add(Dense(100, activation='relu', input_shape = input_shape))
model.add(Dense(100, activation='relu'))
model.add(Dense(2, activation='softmax'))

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Define early_stopping_monitor
early_stopping_monitor = EarlyStopping(patience=2)

# Fit the model
model.fit(predictors, target, validation_split = 0.3, epochs= 30, callbacks=[early_stopping_monitor])
